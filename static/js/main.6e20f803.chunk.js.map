{"version":3,"sources":["svgIcons/stopwatch.svg","svgIcons/help.svg","svgIcons/check.svg","svgIcons/error.svg","svgIcons/rec.svg","svgIcons/answered.svg","svgIcons/16.jpg","svgIcons/list.svg","serviceWorker.js","components/Common/TableComp/TableComp.js","components/Common/Modal/ModalBox.js","util/ApplicationHelper.ts","components/Common/TimerCard/TimerCard.js","components/Common/QuestionCard/QuestionCard.js","components/Common/ReactPie/ReactPie.js","components/Common/SendResultMailComp/SendResultMailComp.js","components/Common/ResultCard/ResultCard.js","components/Panel/SidePanel/SidePanel.js","components/Common/OverviewQuestionCard/OverviewQuestionCard.js","components/Panel/ExamOverviewPanel/ExamOverviewPanel.js","components/Common/PersonCard/PersonCard.js","components/Panel/LeftMenuPanel/LeftMenuPanel.js","components/Common/LeftMenuBar/LeftMenuBar.js","apis/common/QuestionAPI.ts","components/Panel/ExamPanel/ExamPanel.js","components/Common/GlobalNav/GlobalNav.js","components/Common/Register/Register.js","components/Common/LoginForm/LoginForm.js","components/Common/Login/Login.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","TableComp","Table","striped","bordered","hover","this","props","data","answeredQues","totalQues","Component","ModalBox","handleClose","show","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Footer","Button","variant","onClick","showPage","SidePanel","quesNo","QuestionAnsObj","QuestionAnsData","map","value","answeredQuesData","counter","resultDataObj","correctAns","wrongAns","unAnsweredQues","percentage","fetch","method","headers","Headers","serviceType","response","json","res","console","log","questionAns","ques","ans","ansList","ansObj","isAnsTrue","key","size","length","JSON","stringify","resultData","selectedAns","has","get","selectedAnsDivId","ansDiv","TimerCard","countdownHandler","bind","secondsToTime","state","countdown","setInterval","secs","d","Number","h","Math","floor","m","s","setState","prevState","timerHandler","clearInterval","alt","src","stopwatchIcon","QuestionCard","showModal","hideModal","onRadioChange","e","radio","target","innerHTML","style","border","divId","ApplicationHelper","getSelectedAnswerDivId","document","getElementById","id","answerCounter","createResultJsonData","showResultPage","questionNumber","selectedAnswer","getSelectedAnswer","sel","help","isFirstQues","changeQuesHandler","isLastQues","radioValue","deleteResultData","setResultData","COLORS","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","stroke","r","toFixed","Example","activeIndex","onPieEnter","index","resultObj","width","height","activeShape","dataKey","onMouseEnter","entry","PureComponent","jsfiddleUrl","SendResultMailComp","isMailSent","displayMsg","incorrectAns","unattemptedQues","result","calculateResultLabel","objSendMailRequest","toEmail","personAuthData","objUser","emailId","fromMail","subjectLine","rootuser","body","then","status","catch","error","ResultCard","require","isloaded","initialise","getResult","resultValue","Object","keys","Spinner","animation","openQuesCardFlag","quesNumber","selectedDivIndex","openQuestionCard","child","React","createRef","showResultPageFlag","getQuestionFromList","ref","item","toggleQuesClr","OverviewQuestionCard","progressBarHandler","loaded","progressBar","notAnsIcon","answeredIcon","tickIcon","errorIcon","role","ExamOverviewPanel","PersonCard","image","firstName","lastName","LeftMenuPanel","aria-labelledby","Container","children","lmenuOptionData","LeftMenuBar","modalShow","handleClick","menuIcon","eventType","showExamOverviewHandler","showOverviewPageFlag","QuestionAPI","ExamPanel","showExamOverview","objQuestionAPI","showOverviewPage","Map","questionData","set","delete","isLoaded","GlobalNav","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Cookies","handleLogout","handleLogin","Divider","Register","fnameHandler","fname","lnameHandler","lname","emailIdHandler","passwordHandler","password","reEnterPasswordHandler","rpassword","isRegistrationSuccess","isRegStarted","isRegEnded","validationCheckPassed","nameValidationPassed","emailValidationPassed","passwordValidationPassed","registerHandler","trim","nameValidation","emailValidation","passwordValidation","objErrorDTO","errorCode","errorMsg","backdropClassName","Form","Group","controlId","Label","Control","type","onChange","LoginForm","handleEmailChange","email","handlePasswordChange","placeholder","Text","Check","label","isLoginButtonClicked","disabled","as","loginHandler","Login","isAuth","showRegistrationPageFlag","domain","path","pathname","remove","cookieValue","uri","authToken","expires","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6e20f803.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stopwatch.bd3e556a.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.6b210207.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.1e7e8411.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.32dca033.svg\";","module.exports = __webpack_public_path__ + \"static/media/rec.797d5a5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/answered.972884aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/16.1612bffb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/list.e6541639.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nclass TableComp extends Component {\n  render() {\n    return (\n      <div>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Answered</th>\n              <th>UnAnswered</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{this.props.data.answeredQues}</td>\n              <td>\n                {this.props.data.totalQues - this.props.data.answeredQues}\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default TableComp;\n","import React, { Component } from \"react\";\nimport \"./ModalBox.css\";\nimport { Modal, Button, Row, Col, Container } from \"react-bootstrap\";\nimport TableComp from \"../TableComp\";\n\nclass ModalBox extends Component {\n  render() {\n    const handleClose = this.props.handleClose;\n    const show = this.props.show;\n\n    return (\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Do You Want to Submit?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"show-grid\">\n          <TableComp\n            data={{\n              totalQues: this.props.data.totalQues,\n              answeredQues: this.props.data.answeredQues,\n            }}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.props.showPage}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ModalBox;\n","import React, { Component } from \"react\";\n// const QuestionAnsObj = require(\"../apis/stub/QuestionAnswer.json\");\n\nclass SidePanel extends Component {\n  getQuestionFromList(quesNo: any, QuestionAnsObj: any) {\n    let QuestionAnsData;\n\n    QuestionAnsObj.map((value: any) => {\n      if (value.quesNo === quesNo) {\n        QuestionAnsData = value;\n      }\n    });\n\n    return QuestionAnsData;\n  }\n\n  async getResult(answeredQuesData: any) {\n    let counter = 0;\n    let resultDataObj = {\n      correctAns: 0,\n      wrongAns: 0,\n      unAnsweredQues: 0,\n      percentage: 0,\n    };\n\n    // const uri = \"http://localhost:8080/quiz/v1/question\";\n    const uri = `https://secureroute-genericms.apps.ca-central-1.starter.openshift-online.com/quiz/v1/question`;\n\n    // fetch(uri, {\n    //   method: \"get\",\n    //   headers: new Headers({\n    //     \"Content-Type\": \"application/json\",\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //     serviceType: \"checkResult\",\n    //   }),\n    // });\n    const response = await fetch(uri, {\n      method: \"get\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        serviceType: \"checkResult\",\n      }),\n    });\n    const res = await response.json();\n    console.log(\"QUESTION>>>\" + res.questionAns);\n    res.questionAns.map((value: any) => {\n      const ques = value.quesNo;\n      let ans = \"\";\n      value.ansList.map((ansObj: any) => {\n        if (ansObj.isAnsTrue) {\n          ans = ansObj.ans;\n        }\n      });\n      if (answeredQuesData) {\n        for (let [key, value] of answeredQuesData) {\n          if (key === ques && value.ans === ans) {\n            counter = counter + 1;\n          }\n        }\n      }\n    });\n\n    resultDataObj = {\n      correctAns: counter,\n      wrongAns: answeredQuesData.size - counter,\n      unAnsweredQues:\n        res.questionAns.length - (counter + (answeredQuesData.size - counter)),\n      percentage: (counter / res.questionAns.length) * 100,\n    };\n    console.log(\"resultDataObj>>>\" + JSON.stringify(resultDataObj));\n    return resultDataObj;\n  }\n\n  getSelectedAnswer(resultData: any, quesNo: any) {\n    let selectedAns;\n    if (resultData) {\n      if (resultData.has(quesNo)) {\n        selectedAns = resultData.get(quesNo);\n        selectedAns = selectedAns.ans;\n      }\n    }\n\n    return selectedAns;\n  }\n\n  getSelectedAnswerDivId(resultData: any, quesNo: any) {\n    let selectedAnsDivId;\n    if (resultData) {\n      if (resultData.has(quesNo)) {\n        selectedAnsDivId = resultData.get(quesNo);\n        selectedAnsDivId = selectedAnsDivId.ansDiv;\n      }\n    }\n    return selectedAnsDivId;\n  }\n}\n\nexport default SidePanel;\n","import React, { Component } from \"react\";\nimport \"./TimerCard.css\";\nimport stopwatchIcon from \"../../../svgIcons/stopwatch.svg\";\n\nclass TimerCard extends Component {\n  constructor(props) {\n    super(props);\n    this.countdownHandler = this.countdownHandler.bind(this);\n    this.secondsToTime = this.secondsToTime.bind(this);\n    this.state = {\n      countdown: 6000,\n    };\n  }\n  componentDidMount() {\n    this.setInterval = setInterval(this.countdownHandler, 1000);\n  }\n\n  secondsToTime(secs) {\n    const d = Number(secs);\n    let h = Math.floor(d / 3600);\n    let m = Math.floor((d % 3600) / 60);\n    let s = Math.floor((d % 3600) % 60);\n\n    let hDisplay = h > 0 ? \"0\" + h + (h === 1 ? \":\" : \":\") : \"\";\n    let mDisplay = m > 0 ? m + (m === 1 ? \":\" : \":\") : \"\";\n    let sDisplay = s > 0 ? s + (s === 1 ? \"\" : \"\") : \"\";\n    return hDisplay + mDisplay + sDisplay;\n  }\n\n  countdownHandler() {\n    this.setState((prevState) => ({\n      countdown: prevState.countdown - 1,\n    }));\n    if (this.state.countdown === 0) {\n      this.props.timerHandler(this.state.countdown);\n      clearInterval(this.setInterval);\n    }\n  }\n  render() {\n    return (\n      <div className=\"TimerContainer\">\n        <img alt=\"\" className=\"stopwatchIconLook\" src={stopwatchIcon}></img>\n        <div className=\"timerLabel\">\n          {this.secondsToTime(this.state.countdown)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimerCard;\n","import React, { Component } from \"react\";\nimport \"./QuestionCard.scss\";\nimport Modal from \"../Modal/ModalBox\";\nimport ApplicationHelper from \"../../../util/ApplicationHelper\";\nimport { Button } from \"react-bootstrap\";\nimport TimerCard from \"../../Common/TimerCard/TimerCard\";\nimport help from \"../../../svgIcons/help.svg\";\n\nclass QuestionCard extends Component {\n  constructor(props) {\n    super(props);\n    this.onRadioChange = this.onRadioChange.bind(this);\n    this.createResultJsonData = this.createResultJsonData.bind(this);\n    this.ApplicationHelper = new ApplicationHelper();\n    this.showResultPage = this.showResultPage.bind(this);\n    this.state = {\n      radio: null,\n\n      answerCounter: 0,\n      questionNumber: null,\n      selectedAnswer: null,\n      show: false,\n      //countdown: 60,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedAnswer: this.ApplicationHelper.getSelectedAnswer(\n        this.props.data.resultData,\n        this.props.data.quesNo\n      ),\n    });\n  }\n\n  render() {\n    const QuestionAnsObj = this.props.data.QuestionAnsObj;\n    const sel = this.ApplicationHelper.getSelectedAnswer(\n      this.props.data.resultData,\n      this.props.data.quesNo\n    );\n\n    return (\n      <div className=\"quesCardContainer\">\n        <div className=\"quesCard\">\n          <div className=\"quesAnsCard\">\n            <div className=\"svgQuesContainer\">\n              <img alt=\"\" className=\"svgIconBox\" src={help}></img>\n              <div className=\"quesLabel\">{QuestionAnsObj.ques}</div>\n            </div>\n\n            <div className=\"ansBox\">\n              {QuestionAnsObj.ansList.map((ans) => (\n                <button\n                  className={\n                    sel !== \"\" && sel === ans.ans\n                      ? \"skewBtn blue BtnBorder\"\n                      : \"skewBtn blue\"\n                  }\n                  key={ans.ans}\n                  id={\"ans\" + ans.ans + this.props.data.quesNo}\n                  onClick={this.onRadioChange}\n                >\n                  {/* <input\n                  type=\"radio\"\n                  value={ans.ans}\n                  checked={this.state.radio === ans.ans}\n                ></input> */}\n                  {ans.ans}\n                </button>\n              ))}\n            </div>\n          </div>\n          <TimerCard timerHandler={this.showResultPage} />\n        </div>\n        <div className=\"buttonContainer\">\n          {!this.props.data.isFirstQues ? (\n            <Button\n              variant=\"secondary\"\n              size=\"lg\"\n              className=\"buttonLookL\"\n              onClick={() => {\n                this.props.changeQuesHandler(this.props.data.quesNo - 1);\n                this.setState({\n                  radio: null,\n                  selectedAnswer: this.ApplicationHelper.getSelectedAnswer(\n                    this.props.data.resultData,\n                    this.props.data.quesNo + 1\n                  ),\n                  questionNumber: this.props.data.quesNo,\n                });\n              }}\n            >\n              Back\n            </Button>\n          ) : (\n            \"\"\n          )}\n          {!this.props.data.isLastQues ? (\n            <Button\n              variant=\"secondary\"\n              size=\"lg\"\n              className=\"buttonLookR\"\n              onClick={() =>\n                this.createResultJsonData(\n                  this.state.radio,\n                  this.props.data.quesNo\n                )\n              }\n            >\n              Next\n            </Button>\n          ) : (\n            <Button\n              variant=\"secondary\"\n              size=\"lg\"\n              className=\"buttonLookR\"\n              id=\"submit\"\n              onClick={() => this.showModal()}\n            >\n              Submit\n            </Button>\n          )}\n        </div>\n        {this.state.show ? (\n          <Modal\n            data={{\n              totalQues: this.props.data.quesNo,\n              answeredQues: this.props.data.resultData.size,\n            }}\n            show={this.state.show}\n            handleClose={this.hideModal}\n            showPage={() =>\n              this.showResultPage(this.state.radio, this.props.data.quesNo)\n            }\n          ></Modal>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n\n  onRadioChange = (e) => {\n    console.log(e);\n\n    if (\n      this.state.radio !== e.target.innerHTML &&\n      this.state.radio === null &&\n      e.target.style.border === \"\"\n    ) {\n      const divId = this.ApplicationHelper.getSelectedAnswerDivId(\n        this.props.data.resultData,\n        this.props.data.quesNo\n      );\n      if (divId !== \"\" && divId) {\n        document.getElementById(divId).style.border = \"0px solid #1976d2\";\n      }\n      document.getElementById(e.target.id).style.border = \"2px solid #1976d2\";\n      this.setState({\n        radio: e.target.innerHTML,\n        answerCounter: e.target.id,\n      });\n    } else if (\n      this.state.radio !== e.target.innerHTML &&\n      e.target.style.border === \"\"\n    ) {\n      document.getElementById(this.state.answerCounter).style.border = \"\";\n      document.getElementById(e.target.id).style.border = \"2px solid #1976d2\";\n      this.setState({\n        radio: e.target.innerHTML,\n        answerCounter: e.target.id,\n      });\n    } else {\n      document.getElementById(e.target.id).style.border = \"\";\n      this.setState({\n        radio: null,\n      });\n    }\n  };\n\n  showResultPage(radioValue, quesNo) {\n    this.props.showResultPage();\n    this.createResultJsonData(radioValue, quesNo);\n  }\n\n  createResultJsonData(ans, quesNo) {\n    let ansObj = null;\n    if (ans) {\n      ansObj = {\n        quesNo: quesNo,\n        ans: ans,\n        ansDiv: this.state.answerCounter,\n      };\n    }\n\n    if (this.props.data.resultData) {\n      if (this.props.data.resultData.has(quesNo) && ansObj) {\n        this.props.deleteResultData(quesNo);\n      }\n      if (ansObj) {\n        this.props.setResultData(quesNo, ansObj);\n      }\n    }\n\n    console.log(this.props.data.resultData);\n    if (!this.props.data.isLastQues) {\n      this.props.changeQuesHandler(this.props.data.quesNo + 1);\n    }\n\n    this.setState({\n      radio: null,\n      selectedAnswer: this.ApplicationHelper.getSelectedAnswer(\n        this.props.data.resultData,\n        this.props.data.quesNo + 1\n      ),\n      questionNumber: this.props.data.quesNo,\n    });\n  }\n}\n\nexport default QuestionCard;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\nimport \"./ReactPie.css\";\n\nconst COLORS = [\"#0088FE\", \"#FFBB28\", \"#FF8042\"];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >\n        {payload.name}\n        {` ${value}`}\n      </text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/hqnrgxpj/\";\n\n  state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    const data = this.props.data.resultObj;\n    return (\n      <PieChart width={600} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          innerRadius={80}\n          outerRadius={100}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nclass SendResultMailComp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMailSent: false,\n      displayMsg: \"Sending Mail...\",\n    };\n  }\n\n  calculateResultLabel() {\n    const resultLabel = this.props.data.percentage > 70 ? \"Passed\" : \"Failed\";\n    return resultLabel;\n  }\n  componentDidMount() {\n    const data = {\n      correctAns: this.props.data.correctAns,\n      incorrectAns: this.props.data.wrongAns,\n      unattemptedQues: this.props.data.unAnsweredQues,\n      result: this.calculateResultLabel(),\n      objSendMailRequest: {\n        toEmail: this.props.data.personAuthData.objUser[0].emailId,\n        fromMail: \"steelshootgaming@gmail.com\",\n        subjectLine: \"Test Result\",\n      },\n    };\n    try {\n      fetch(\n        \"https://secureroute-genericms.apps.ca-central-1.starter.openshift-online.com/quiz/v1/sendResultMail\",\n        {\n          // mode: \"no-cors\",\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n            rootuser: \"ragnar\",\n          },\n          body: JSON.stringify(data),\n        }\n      )\n        .then((res) => {\n          // JSON data parsed by `data.json()` call\n          res.json();\n          // res = sendResultMailstub\n          res.status === 201 || res.status === 200\n            ? this.setState({\n                isMailSent: true,\n                displayMsg:\n                  \"Email sent Sucessfully to the Registrated email Id\",\n              })\n            : this.setState({\n                isMailSent: false,\n                displayMsg: \"Internal Issue\",\n              });\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n          this.setState({\n            isMailSent: true,\n            displayMsg: \"Email not Sent\",\n          });\n        });\n    } catch (e) {\n      this.setState({\n        isMailSent: true,\n        displayMsg: \"Email not Sent\",\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"passFailLabel\">\n          {this.calculateResultLabel()} : {this.props.data.percentage}%\n        </div>\n        <div className=\"emailLabel\">{this.state.displayMsg}</div>\n      </div>\n    );\n  }\n}\n\nexport default SendResultMailComp;\n","import React, { Component } from \"react\";\nimport \"./ResultCard.css\";\nimport ReactPie from \"../ReactPie/ReactPie\";\nimport ApplicationHelper from \"../../../util/ApplicationHelper\";\nimport { Spinner } from \"react-bootstrap\";\nimport SendResultMailComp from \"../SendResultMailComp\";\nconst sendResultMailstub = require(\"../../../apis/stub/sendResultMailstub.json\");\n\nclass ResultCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isloaded: false,\n      resultData: {},\n    };\n    this.ApplicationHelper = new ApplicationHelper();\n    this.initialise();\n  }\n\n  async initialise() {\n    const resultValue = await this.ApplicationHelper.getResult(\n      this.props.data.result\n    );\n    console.log(\"resultValue\" + JSON.stringify(resultValue));\n    this.setState({\n      resultData: resultValue,\n      isloaded: Object.keys(resultValue).length !== 0 ? true : false,\n    });\n  }\n\n  render() {\n    const resultObj = [\n      { name: \"Correct\", value: this.state.resultData.correctAns },\n      { name: \"Wrong\", value: this.state.resultData.wrongAns },\n      { name: \"UnAnswered\", value: this.state.resultData.unAnsweredQues },\n    ];\n\n    return this.state.isloaded ? (\n      <div className=\"resultCard\">\n        <div className=\"resultBoxLook\">\n          <ReactPie data={{ resultObj }} />\n        </div>\n        <div className=\"passFailContainer\">\n          <SendResultMailComp\n            data={{\n              correctAns: this.state.resultData.correctAns,\n              wrongAns: this.state.resultData.wrongAns,\n              unAnsweredQues: this.state.resultData.unAnsweredQues,\n              percentage: this.state.resultData.percentage,\n              personAuthData: this.props.data.personAuthData,\n            }}\n          />\n        </div>\n      </div>\n    ) : (\n      <div className=\"spinnerRsultContainer\">\n        <Spinner className=\"spinnerLook\" animation=\"border\" variant=\"success\" />\n        <div className=\"spinnerText\">Calculating Result... Please Wait</div>\n      </div>\n    );\n  }\n}\n\nexport default ResultCard;\n","import React, { Component } from \"react\";\nimport QuestionCard from \"../../Common/QuestionCard/QuestionCard\";\nimport \"./SidePanel.css\";\nimport ApplicationHelper from \"../../../util/ApplicationHelper\";\nimport ResultCard from \"../../Common/ResultCard/ResultCard\";\n\nclass SidePanel extends Component {\n  constructor(props) {\n    super();\n    this.ApplicationHelper = new ApplicationHelper();\n    this.state = {\n      openQuesCardFlag: false,\n      quesNumber: 1,\n      selectedDivIndex: \"\",\n    };\n    this.openQuestionCard = this.openQuestionCard.bind(this);\n    this.showResultPage = this.showResultPage.bind(this);\n    this.child = React.createRef();\n  }\n\n  showResultPage() {\n    this.props.showResultPage();\n  }\n  render() {\n    const QuestionAnsObj = this.props.data.QuestionAnsObj;\n\n    return this.props.data.showResultPageFlag ? (\n      <ResultCard\n        data={{\n          result: this.props.data.resultData,\n          personAuthData: this.props.data.personAuthData,\n        }}\n      />\n    ) : (\n      <div className=\"sidePanelContainer\">\n        <QuestionCard\n          data={{\n            QuestionAnsObj: this.ApplicationHelper.getQuestionFromList(\n              this.state.quesNumber,\n              QuestionAnsObj.questionAns\n            ),\n            quesNo: this.state.quesNumber,\n            isLastQues:\n              QuestionAnsObj.questionAns.length === this.state.quesNumber\n                ? true\n                : false,\n            isFirstQues: this.state.quesNumber === 1 ? true : false,\n            resultData: this.props.data.resultData,\n            showResultPage: this.state.showResultPage,\n          }}\n          changeQuesHandler={this.openQuestionCard}\n          deleteResultData={this.props.deleteResultData}\n          setResultData={this.props.setResultData}\n          showResultPage={this.showResultPage}\n          ref={this.child}\n        />\n        <div className=\"sidePanelCardBox\">\n          <div className=\"sidePanel\">\n            {QuestionAnsObj.questionAns.map((item) => (\n              <div\n                key={item.quesNo}\n                id={item.quesNo}\n                className={this.toggleQuesClr(item.quesNo)}\n                onClick={(e) => this.openQuestionCard(item.quesNo)}\n              >\n                {item.quesNo}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  toggleQuesClr(quesNo) {\n    const sel = this.ApplicationHelper.getSelectedAnswer(\n      this.props.data.resultData,\n      quesNo\n    );\n    if (sel && sel !== null && sel !== \"\") {\n      return \"ansQuesNoLook\";\n    } else {\n      return \"unAnsQuesNoLook\";\n    }\n  }\n\n  openQuestionCard(quesNo) {\n    if (this.state.selectedDivIndex) {\n      // document.getElementById(\n      //   this.state.selectedDivIndex\n      // ).style.backgroundColor = \"#3094c0\";\n\n      document.getElementById(this.state.selectedDivIndex).style.border = \"\";\n    }\n\n    this.setState({\n      openQuesCardFlag: true,\n      quesNumber: quesNo,\n      selectedDivIndex: quesNo,\n    });\n    document.getElementById(quesNo).style.border = \"2px solid black\";\n    //document.getElementById(quesNo).style.backgroundColor = \"white\";\n  }\n}\n\nexport default SidePanel;\n","import React, { Component } from \"react\";\nimport \"./OverviewQuestionCard.css\";\nimport tickIcon from \"../../../svgIcons/check.svg\";\nimport errorIcon from \"../../../svgIcons/error.svg\";\nimport notAnsIcon from \"../../../svgIcons/rec.svg\";\nimport answeredIcon from \"../../../svgIcons/answered.svg\";\nimport ApplicationHelper from \"../../../util/ApplicationHelper\";\nimport { Spinner } from \"react-bootstrap\";\n\nclass OverviewQuestionCard extends Component {\n  constructor(props) {\n    super(props);\n    this.ApplicationHelper = new ApplicationHelper();\n    this.progressBarHandler = this.progressBarHandler.bind(this);\n    this.state = {\n      loaded: false,\n      progressBar: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setInterval = setInterval(this.progressBarHandler, 100);\n  }\n\n  progressBarHandler() {\n    this.setState((prevState) => ({\n      progressBar: prevState.progressBar + 1,\n    }));\n    if (this.state.progressBar === 5) {\n      clearInterval(this.setInterval);\n      this.setState({\n        loaded: true,\n      });\n    }\n  }\n  render() {\n    const selectedAns = this.ApplicationHelper.getSelectedAnswer(\n      this.props.data.resultData,\n      this.props.data.ques.quesNo\n    );\n    return !this.state.loaded ? (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    ) : (\n      <div className=\"OverQuesCardBox\">\n        <div className=\"OverQuesCardQuesLabel\">\n          {this.props.data.ques.ques}\n          {selectedAns ? (\n            <img alt=\"\" className=\"ansUnansBoxLook\" src={notAnsIcon}></img>\n          ) : (\n            <img alt=\"\" className=\"ansUnansBoxLook\" src={answeredIcon}></img>\n          )}\n        </div>\n        <div className=\"OverQuesCardAnsBox\">\n          {this.props.data.ques.ansList.map((item) => (\n            <div key={item.ans} id={item.ans} className=\"OverQuesCardAnsLabel\">\n              {item.isAnsTrue ? (\n                <img alt=\"\" className=\"tickIcon\" src={tickIcon}></img>\n              ) : selectedAns === item.ans ? (\n                <img alt=\"\" className=\"tickIcon\" src={errorIcon}></img>\n              ) : (\n                <div className=\"tickIcon\"></div>\n              )}\n              {item.ans}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OverviewQuestionCard;\n","import React, { Component } from \"react\";\nimport \"./ExamOverviewPanel.css\";\nimport OverviewQuestionCard from \"../../Common/OverviewQuestionCard/OverviewQuestionCard\";\n\nclass ExamOverviewPanel extends Component {\n  render() {\n    const QuestionAnsObj = require(\"../../../apis/stub/QuestionAnswer.json\");\n    return (\n      <div className=\"ExamOverViewPanelContainer\">\n        {QuestionAnsObj.questionAns.map((item) => (\n          <div key={item.quesNo} id={item.quesNo}>\n            <OverviewQuestionCard\n              data={{\n                ques: item,\n                resultData: this.props.data.resultData,\n              }}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default ExamOverviewPanel;\n","import React, { Component } from \"react\";\nimport \"./PersonCard.css\";\nimport image from \"../../../svgIcons/16.jpg\";\n// import UberReactVisComp from \"../UberReactVisComp/UberReactVisComp\";\n\nclass PersonCard extends Component {\n  render() {\n    return (\n      <div className=\"PersonCardContainer\">\n        <div className=\"imgBox\">\n          <img alt=\"\" src={image}></img>\n        </div>\n        <div className=\"basicInfoBox\">\n          <div className=\"nameLabel\">\n            {this.props.data.personAuthData.objUser[0].firstName +\n              \" \" +\n              this.props.data.personAuthData.objUser[0].lastName}\n          </div>\n          <div className=\"otherDetailLook\">\n            <div className=\"detailsLook\">1201212</div>\n            <div className=\"detailsLook\">Noida</div>\n            <div className=\"detailsLook\">\n              {this.props.data.personAuthData.objUser[0].emailId}\n            </div>\n          </div>\n          <div className=\"dateLook\">10th March 2020</div>\n        </div>\n        {/* <UberReactVisComp /> */}\n      </div>\n    );\n  }\n}\n\nexport default PersonCard;\n","import React, { Component } from \"react\";\nimport { Modal, Container, Button } from \"react-bootstrap\";\nimport \"./LeftMenuPanel.css\";\n\nclass LeftMenuPanel extends Component {\n  render() {\n    return (\n      <div>\n        <Modal\n          {...this.props}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          className=\"modalContainer\"\n        >\n          <Modal.Body className=\"show-grid\" className=\"modalBodyLook\">\n            <Container className=\"modalContainerLook\">\n              {this.props.children}\n            </Container>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.props.onHide}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default LeftMenuPanel;\n","import React, { Component } from \"react\";\nimport LeftMenuPanel from \"../../Panel/LeftMenuPanel\";\nimport \"./LeftMenuBar.css\";\nimport menuIcon from \"../../../svgIcons/list.svg\";\nconst lmenuOptionData = require(\"../../../apis/stub/menuOptionData.json\");\n\nclass LeftMenuBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n    this.modalShow = this.modalShow.bind(this);\n    this.onHide = this.onHide.bind(this);\n  }\n  modalShow() {\n    //$(\".fade modal-backdrop show\").css(\"opacity\", \"0.1\");\n    this.setState({\n      show: true,\n    });\n  }\n\n  onHide() {\n    console.log(\"clicked\");\n    this.setState({\n      show: false,\n    });\n  }\n  render() {\n    return (\n      <div className=\"dekstopContainer\">\n        <div className=\"menuPanel\">\n          {lmenuOptionData.item.map((item) => (\n            <div\n              key={item.data}\n              className=\"menuLook\"\n              onClick={() => this.handleClick(item.data)}\n            >\n              {item.data}\n            </div>\n          ))}\n        </div>\n        {this.state.show ? (\n          <LeftMenuPanel show={this.modalShow} onHide={this.onHide}>\n            <div className=\"menuPanelMobile\">\n              {lmenuOptionData.item.map((item) => (\n                <div\n                  key={item.data}\n                  className=\"menuLookMobile\"\n                  onClick={() => this.handleClick(item.data)}\n                >\n                  {item.data}\n                </div>\n              ))}\n            </div>\n          </LeftMenuPanel>\n        ) : (\n          <div className=\"menuIconContainer\">\n            <img\n              src={menuIcon}\n              onClick={this.modalShow}\n              className=\"menuIconLook\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n  handleClick(eventType) {\n    if (eventType === \"Exam Overview\") {\n      this.props.showExamOverviewHandler();\n      if (this.props.data.showOverviewPageFlag) {\n        this.onHide();\n      }\n    }\n  }\n}\n\nexport default LeftMenuBar;\n","import { Component } from \"react\";\n// import axios from \"axios\";\n// const QuestionResponse = require(\"../stub/QuestionAnswer.json\");\n\nclass QuestionAPI extends Component {\n  async getResults() {\n    console.log(\"inside QuestionAPI\");\n\n    try {\n      await fetch(\n        \"http://openjdk-app-exam-genericms.apps.ca-central-1.starter.openshift-online.com/question\",\n        {\n          method: \"get\",\n          headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n          }),\n        }\n      ).then((res) => {\n        return res.json();\n        // return QuestionResponse;\n      });\n      //   axios\n      //     .get(\n      //       \"http://openjdk-app-exam-genericms.apps.ca-central-1.starter.openshift-online.com/question\",\n      //       axiosConfig\n      //     )\n      //     .then((res) => {\n      //       console.log(\"RESPONSE RECEIVED: \", res);\n      //       return res;\n      //       //       // return QuestionResponse;\n      //     })\n      //     .catch((err) => {\n      //       console.log(\"AXIOS ERROR: \", err);\n      //     })\n      //     .catch(console.log);\n    } catch (e) {}\n  }\n}\n\nexport default QuestionAPI;\n","import React, { Component } from \"react\";\nimport SidePanel from \"../../Panel/SidePanel/SidePanel\";\nimport ExamOverviewPanel from \"../../Panel/ExamOverviewPanel/ExamOverviewPanel\";\nimport PersonCard from \"../../Common/PersonCard/PersonCard\";\nimport LeftMenuBar from \"../../Common/LeftMenuBar/LeftMenuBar\";\nimport { Spinner } from \"react-bootstrap\";\nimport QuestionAPI from \"../../../apis/common/QuestionAPI\";\nimport \"./ExamPanel.css\";\n\nclass ExamPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.showExamOverview = this.showExamOverview.bind(this);\n    this.deleteResultData = this.deleteResultData.bind(this);\n    this.setResultData = this.setResultData.bind(this);\n    this.showResultPage = this.showResultPage.bind(this);\n    // this.progressBarHandler = this.progressBarHandler.bind(this);\n    this.objQuestionAPI = new QuestionAPI();\n    this.state = {\n      showOverviewPage: false,\n      resultData: new Map(),\n      showResultPageFlag: false,\n      progressBar: 0,\n      loaded: false,\n      questionData: [],\n    };\n  }\n\n  setResultData(quesNo, ansObj) {\n    console.log(this.state.resultData);\n    this.state.resultData.set(quesNo, ansObj);\n  }\n  deleteResultData(quesNo) {\n    this.state.resultData.delete(quesNo);\n  }\n\n  showExamOverview() {\n    this.setState({\n      showOverviewPage: this.state.showResultPageFlag ? true : false,\n    });\n  }\n\n  showResultPage() {\n    this.setState({\n      showResultPageFlag: true,\n    });\n  }\n  componentDidMount() {\n    // this.setInterval = setInterval(this.progressBarHandler, 100);\n    // this.setState({\n    //   questionData: this.objQuestionAPI.getResults(),\n    // });\n    // const uri = \"http://localhost:8080/quiz/v1/question\";\n    const uri = `https://secureroute-genericms.apps.ca-central-1.starter.openshift-online.com/quiz/v1/question`;\n\n    fetch(uri, {\n      method: \"get\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        serviceType: \"showQuestion\",\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            questionData: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  // progressBarHandler() {\n  //   this.setState((prevState) => ({\n  //     progressBar: prevState.progressBar + 1,\n  //   }));\n  //   if (this.state.progressBar === 100) {\n  //     clearInterval(this.setInterval);\n  //     this.setState({\n  //       loaded: true,\n  //     });\n  //   }\n  // }\n  render() {\n    let QuestionAnsObj;\n    if (this.state.questionData) {\n      QuestionAnsObj = this.state.questionData;\n    }\n    // const QuestionAnsObj = require(\"../../../apis/stub/QuestionAnswer.json\");\n\n    return !this.state.isLoaded ? (\n      <div className=\"spinnerPostion\">\n        <Spinner animation=\"grow\" variant=\"danger\" />\n      </div>\n    ) : (\n      <div className=\"profilePageContainer\">\n        <div className=\"examCardContainer\">\n          <LeftMenuBar\n            showExamOverviewHandler={this.showExamOverview}\n            data={{ showOverviewPageFlag: this.state.showOverviewPage }}\n          />\n\n          {this.state.showOverviewPage && this.state.showResultPageFlag ? (\n            <div className=\"innerContainer\">\n              <ExamOverviewPanel\n                data={{\n                  resultData: this.state.resultData,\n                }}\n              />\n            </div>\n          ) : (\n            <div className=\"innerContainer\">\n              <PersonCard\n                data={{ personAuthData: this.props.data.personAuthData }}\n              />\n              <SidePanel\n                data={{\n                  QuestionAnsObj,\n                  resultData: this.state.resultData,\n                  showResultPageFlag: this.state.showResultPageFlag,\n                  personAuthData: this.props.data.personAuthData,\n                }}\n                deleteResultData={this.deleteResultData}\n                setResultData={this.setResultData}\n                showResultPage={this.showResultPage}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamPanel;\n","import React, { Component } from \"react\";\nimport { Navbar, NavDropdown, Nav, Button } from \"react-bootstrap\";\nimport Cookies from \"js-cookie\";\n\nclass GlobalNav extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Online Exam Platform</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#link\">Link</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item>\n                  {Cookies.get(\"authCookie\") ? (\n                    <Button size=\"lg\" onClick={this.props.handleLogout}>\n                      Logout\n                    </Button>\n                  ) : (\n                    <Button size=\"lg\" onClick={this.props.handleLogin}>\n                      Login\n                    </Button>\n                  )}\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            {/* <Form inline>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n              />\n              <Button variant=\"outline-success\">Search</Button>\n            </Form> */}\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default GlobalNav;\n","import React, { Component } from \"react\";\nimport \"./Register.css\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Modal, Form, Row, Col, Button } from \"react-bootstrap\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRegistrationSuccess: false,\n      displayMsg: \"\",\n      isRegStarted: false,\n      isRegEnded: false,\n      validationCheckPassed: false,\n      nameValidationPassed: false,\n      emailValidationPassed: false,\n      passwordValidationPassed: false,\n    };\n    this.registerHandler = this.registerHandler.bind(this);\n    this.fnameHandler = this.fnameHandler.bind(this);\n    this.lnameHandler = this.lnameHandler.bind(this);\n    this.emailIdHandler = this.emailIdHandler.bind(this);\n    this.passwordHandler = this.passwordHandler.bind(this);\n    this.reEnterPasswordHandler = this.reEnterPasswordHandler.bind(this);\n  }\n\n  fnameHandler = (e) => {\n    this.setState({ fname: e.target.value });\n  };\n  lnameHandler = (e) => {\n    this.setState({ lname: e.target.value });\n  };\n  emailIdHandler = (e) => {\n    this.setState({ emailId: e.target.value });\n  };\n  passwordHandler = (e) => {\n    this.setState({ password: e.target.value });\n  };\n  reEnterPasswordHandler = (e) => {\n    this.setState({ rpassword: e.target.value });\n  };\n\n  nameValidation() {\n    if (\n      this.state.fname &&\n      this.state.lname &&\n      this.state.fname.trim().length !== 0 &&\n      this.state.lname.trim().length !== 0\n    ) {\n      this.setState({ nameValidationPassed: true });\n    } else {\n      this.setState({ nameValidationPassed: false });\n    }\n  }\n  emailValidation() {\n    if (this.state.emailId && this.state.emailId.trim().length !== 0) {\n      this.setState({ emailValidationPassed: true });\n    } else {\n      this.setState({ emailValidationPassed: false });\n    }\n  }\n  passwordValidation() {\n    if (this.state.password === this.state.rpassword) {\n      this.setState({ passwordValidationPassed: true });\n    } else {\n      this.setState({ passwordValidationPassed: false });\n    }\n  }\n\n  async registerHandler() {\n    this.setState({\n      isRegStarted: true,\n    });\n    this.nameValidation();\n    if (this.state.nameValidationPassed) {\n      this.emailValidation();\n    }\n    if (this.state.emailValidationPassed) {\n      this.passwordValidation();\n    }\n\n    if (\n      this.state.nameValidationPassed &&\n      this.state.emailValidationPassed &&\n      this.state.passwordValidationPassed\n    ) {\n      this.setState({ validationCheckPassed: true });\n    }\n    if (this.state.validationCheckPassed) {\n      const data = {\n        firstName: this.state.fname,\n        lastName: this.state.lname,\n        emailId: this.state.emailId,\n        password: this.state.password,\n      };\n\n      const uri = `https://secureroute-genericms.apps.ca-central-1.starter.openshift-online.com/common/v1/user`;\n      try {\n        const response = await fetch(uri, {\n          method: \"post\",\n          headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            rootuser: \"ragnar\",\n          }),\n          body: JSON.stringify(data),\n        });\n        const res = await response.json();\n        if (res.objErrorDTO.errorCode === \"201\") {\n          this.setState({\n            isRegistrationSuccess: true,\n            displayMsg: \"Registration Success\",\n            isRegEnded: true,\n          });\n        } else {\n          this.setState({\n            isRegistrationSuccess: true,\n            displayMsg: res.objErrorDTO.errorMsg,\n            isRegEnded: true,\n          });\n        }\n      } catch (e) {\n        this.setState({\n          isRegistrationSuccess: true,\n          displayMsg: e,\n          isRegEnded: true,\n        });\n      }\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Modal\n          {...this.props}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          className=\"modalRegisterLook\"\n          backdropClassName=\"backdropClassName\"\n          backdrop=\"static\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Register</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"show-grid\" className=\"modalBodyRegisterLook\">\n            <Form>\n              <div className=\"registerNameLableLook\">\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={this.state.fname}\n                    onChange={this.fnameHandler}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Label>Last Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={this.state.lname}\n                    onChange={this.lnameHandler}\n                  />\n                </Form.Group>\n              </div>\n              {!this.state.nameValidationPassed && this.state.isRegStarted ? (\n                <div className=\"validationErrorLook\">\n                  Please Provide Proper Name\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Email Id</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  value={this.state.emailId}\n                  onChange={this.emailIdHandler}\n                />\n              </Form.Group>\n              {!this.state.emailValidationPassed &&\n              this.state.nameValidationPassed &&\n              this.state.isRegStarted ? (\n                <div className=\"validationErrorLook\">\n                  Please Provide EmailId\n                </div>\n              ) : (\n                \"\"\n              )}\n              <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Enter Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.passwordHandler}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={this.state.rpassword}\n                  onChange={this.reEnterPasswordHandler}\n                />\n              </Form.Group>\n              {!this.state.passwordValidationPassed &&\n              this.state.emailValidationPassed &&\n              this.state.isRegStarted ? (\n                <div className=\"validationErrorLook\">Password not matching</div>\n              ) : (\n                \"\"\n              )}\n              <div className=\"registerButtonContainer\">\n                <Button\n                  className=\"registerButtonCss\"\n                  onClick={this.registerHandler}\n                >\n                  Register\n                </Button>\n                {this.state.validationCheckPassed &&\n                this.state.isRegStarted &&\n                !this.state.isRegEnded ? (\n                  <Spinner\n                    className=\"spinnerLook\"\n                    animation=\"border\"\n                    variant=\"success\"\n                  />\n                ) : (\n                  \"\"\n                )}\n                {this.state.isRegistrationSuccess ? (\n                  <div>{this.state.displayMsg}</div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\n\nimport { Button, Form, Spinner } from \"react-bootstrap\";\nimport Register from \"../Register\";\nimport \"./LoginForm.css\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      show: false,\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.modalShow = this.modalShow.bind(this);\n    this.onHide = this.onHide.bind(this);\n  }\n  handleEmailChange = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePasswordChange = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  modalShow() {\n    console.log(\"clicked1\");\n    this.setState({\n      show: true,\n    });\n  }\n\n  onHide() {\n    console.log(\"clicked\");\n    this.setState({\n      show: false,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Form className=\"FormContainerBox\">\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={this.state.email}\n              onChange={this.handleEmailChange}\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePasswordChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\n          </Form.Group>\n          <div className=\"ButtonBoxLoginPage\">\n            {!this.props.data.isLoginButtonClicked ? (\n              <Button\n                variant=\"primary\"\n                className=\"buttonLookLogin\"\n                onClick={() =>\n                  this.props.loginHandler(this.state.email, this.state.password)\n                }\n              >\n                Login\n              </Button>\n            ) : (\n              <Button variant=\"primary\" className=\"buttonLookLogin\" disabled>\n                Login\n                <Spinner\n                  as=\"span\"\n                  size=\"sm\"\n                  role=\"status\"\n                  animation=\"border\"\n                  variant=\"light\"\n                />\n              </Button>\n            )}\n            <Button\n              variant=\"success\"\n              className=\"buttonLookregister\"\n              onClick={this.modalShow}\n            >\n              New User? Register\n            </Button>\n            {this.props.data.displayMsg ? (\n              <div className=\"loginValidatitonErrorLook\">\n                {this.props.data.displayMsg}\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </Form>\n        {this.state.show ? (\n          <Register show={this.modalShow} onHide={this.onHide} />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport ExamPanel from \"../../Panel/ExamPanel/ExamPanel\";\nimport GlobalNav from \"../../Common/GlobalNav/GlobalNav\";\nimport LoginForm from \"../../Common/LoginForm/LoginForm\";\nimport Register from \"../../Common/Register/Register\";\nimport \"./Login.css\";\nconst PersonResponse = require(\"../../../apis/stub/profiledata.json\");\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuth: false,\n      isLoaded: false,\n      personAuthData: {},\n      showRegistrationPageFlag: false,\n      isLoginButtonClicked: false,\n      displayMsg: \"\",\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.registerHandler = this.registerHandler.bind(this);\n  }\n\n  handleLogout() {\n    const domain = window.location.hostname;\n    const path = window.location.pathname;\n    console.log(path + \" >>>>\" + domain);\n    Cookies.remove(\"authCookie\", {\n      path: path,\n      domain: domain,\n    });\n    console.log(\"inside handlelogout > login.js\");\n    console.log(\"cookie value > >\" + Cookies.get(\"authCookie\"));\n    if (!Cookies.get(\"authCookie\")) {\n      console.log(\n        \"inside handlelogout > login.js >checking cookie after removing\"\n      );\n      this.setState({ isAuth: false });\n    }\n  }\n\n  registerHandler() {\n    this.setState({\n      showRegistrationPageFlag: true,\n    });\n    console.log(\"register\");\n  }\n\n  async componentDidMount() {\n    const cookieValue = Cookies.get(\"authCookie\");\n    if (cookieValue) {\n      console.log(\"cookieValue\" + cookieValue);\n    }\n\n    const uri =\n      `https://secureroute-genericms.apps.ca-central-1.starter.openshift-online.com/common/v1/user/filter?` +\n      \"authCookie=\" +\n      cookieValue;\n    try {\n      const response = await fetch(uri, {\n        method: \"get\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          rootuser: \"ragnar\",\n        }),\n      });\n      const res = await response.json();\n      if (res.objErrorDTO.errorCode === \"201\") {\n        this.setState({\n          personAuthData: res,\n          isAuth: true,\n        });\n      } else {\n        this.setState({\n          personAuthData: res,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <GlobalNav\n          handleLogout={this.handleLogout}\n          handleLogin={this.handleLogin}\n        />\n        {this.state.isAuth ? (\n          <ExamPanel data={{ personAuthData: this.state.personAuthData }} />\n        ) : !this.state.show ? (\n          <div className=\"bkImg\">\n            <LoginForm\n              loginHandler={this.handleLogin}\n              registerHandler={this.modalShow}\n              data={{\n                isLoginButtonClicked: this.state.isLoginButtonClicked,\n                displayMsg: this.state.displayMsg,\n              }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n\n  async handleLogin(email, password) {\n    this.setState({\n      isLoginButtonClicked: true,\n    });\n    const domain = window.location.hostname;\n    const path = window.location.pathname;\n    // this.loginApiCallHandler(email, password);\n    const uri =\n      `https://secureroute-genericms.apps.ca-central-1.starter.openshift-online.com/common/v1/user/filter?` +\n      \"emailId=\" +\n      email +\n      \"&\" +\n      \"password=\" +\n      password;\n    try {\n      const response = await fetch(uri, {\n        method: \"get\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          rootuser: \"ragnar\",\n        }),\n      });\n\n      if (response.status === 200) {\n        const res = await response.json();\n        this.setState({\n          personAuthData: res,\n        });\n      } else if (response.status === 204) {\n        this.setState({\n          isLoginButtonClicked: false,\n          displayMsg: \"Email not Registered\",\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n    console.log(\"inserted\");\n    if (\n      email &&\n      password &&\n      this.state.personAuthData &&\n      this.state.personAuthData.objUser &&\n      email === this.state.personAuthData.objUser[0].emailId &&\n      password === this.state.personAuthData.objUser[0].password\n    ) {\n      Cookies.set(\n        \"authCookie\",\n        this.state.personAuthData.objUser[0].authToken,\n        {\n          expires: 3 / 96,\n          path: path,\n          domain: domain,\n        }\n      );\n      this.setState({ isAuth: true });\n    }\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Login from \"./components/Common/Login/Login\";\n// import EmergencyCard from \"./components/Common/EmergencyCard/EmergencyCard\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Login />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}